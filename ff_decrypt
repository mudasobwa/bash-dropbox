#!/bin/bash

# decrypts file content to standard output

# load default configuration
source /etc/forkforge.conf
# load user-specific config
if [ -f $HOME_DIR/.forkforgerc ] ; then
  source $HOME_DIR/.forkforgerc
fi

if [ x$1 != x ]; then
  # save for future use: set will damage it
  FILETMP=$1 
  # split head line of crypted file
  set -- junk `head -n 1 $1`
  shift
  for word; do # iterate through
    # echo "Σ$MODTIME ⧗$MD5SUM ✉am@mudasobwa.ru:$PWD"
    # FIXME this will work with BASH4 ONLY because of assotiated arrays
    unset PWDSTMP && declare -A PWDSTMP
    case $word in
      Σ*) MD5SUM=${word:1} ;;
      ⧗*) MODTIME=${word:1} ;;
      ✉*) PWDSTMP[`echo ${word:1} | cut -d ':' -f 1`]=`echo ${word:1} | cut -d ':' -f 2-` ;;
      *) ;;
    esac
  done
  # retrieve _my_ password and uncrypt AES password with it
  PWDTMP=$(echo ${PWDSTMP["$PRIVATE_ID"]} | base64 -d | openssl rsautl -decrypt -inkey $PRIVATE_KEY)
  # encrypt the crypted file content with AES password got previously
  tail -n +2 $FILETMP | openssl enc -aes-256-cbc -d -k $PWDTMP
else
  exit 112
fi
